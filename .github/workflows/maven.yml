# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build And Release

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
          java-version: '11'
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Bump release version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.2
      with:
        current-version: '0.0.0-alpha1'
        version-fragment: 'major'
    - name: Upload Artifacts
      run: mkdir builds && cp target/littleBeasts/*.exe builds/littleBeasts-${{ steps.bump_version.outputs.next-version }}.exe
    - uses: actions/upload-artifact@v2
      with:
        name: littleBeasts
        path: builds
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.next-version }}
        release_name: Release ${{ steps.bump_version.outputs.next-version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: builds/littleBeasts-${{ steps.bump_version.outputs.next-version }}.exe
        asset_name: littleBeasts.exe
        asset_content_type: application/octet-stream
